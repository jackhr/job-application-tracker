<!DOCTYPE html>
<html lang="en">
<%- include('../partials/head') %>
<body>
  <% include('../partials/header') %>
  <div id="all-content">
    <div id="nav">
      <div class="user-info">
        <h1><%= user.name.split(' ')[0] %></h1>
        <h2><%= user.email %></h2>
      </div>
      <div id="nav-options-container">
        <div id="add-job-btn" class="nav-option">Add New Job</div>
        <div id="settings-btn" class="nav-option">Settings</div>
        <a href="/users/logout" class="nav-option logout">Logout</a>
      </div>
      <img id="hamburger-icon" src="/images/hamburger.webp" alt="Hamburger menu icon">
    </div>
    <div id="main-section-container">
      <div class="main-section all-jobs active <%= onMobile ? 'onMobile' : '' %>">
        <div id="job-link-preview">
          <div id="loader"></div>
          <div class="header">
            <div class="info">
              <img class="favicon" src="/images/global.svg">
              <div class="title">
                <h1>My New Company</h1>
                <span>www.my_new_job_link.com</span>
              </div>
            </div>
            <div class="options">
              <img class="edit" src="/images/edit.svg" alt="edit option" title="edit">
              <img class="copy" src="/images/copy.svg" alt="copy option" title="copy">
            </div>
          </div>
        </div>
        <table id="all-jobs-table" class="<%= preferences.showColors ? '' : 'hide-colors' %> <%= user.onMobile ? 'onMobile' : '' %>">
          <thead>
            <tr>
              <th>Company</th>
              <th>Date Applied</th>
              <th>Job Title</th>
              <th>Location</th>
              <th>Application Link</th>
              <th>Remote</th>
              <th>Salary</th>
              <th>Notes</th>
              <th>Application Status</th>
              <th>Contact</th>
              <th>Job Type</th>
              <th>Employer Response</th>
              <th>Cover Letter</th>
              <th>Overall Interest</th>
            </tr>
          </thead>
          <tbody>
            <% jobs.forEach(job => { %>
              <% const UTCAppliedTS = job.dateApplied.getTime() + (job.dateApplied.getTimezoneOffset() * 60*1000); %>
              <% job.dateApplied = new Date(UTCAppliedTS); %>
              <tr id="job-<%= job._id %>" class="interest-<%= job.interest.replaceAll(' ', '_') %> <%= preferences.theme %>" data-job-id="<%= job._id %>">
                <td class="company">
                  <span class="job-text hide"><%= job.companyName %></span>
                  <input name="companyName" data-old-val="<%= job.companyName %>" class="job-input companyName" type="text" value="<%= job.companyName %>">
                </td>
                <td class="no-break-cell">
                  <span class="job-text"><%= job.dateApplied.toDateString() %></span>
                  <input class="job-date dateApplied hide" type="date" name="dateApplied" value>
                </td>
                <td>
                  <span class="job-text hide"><%= job.title %></span>
                  <input name="title" data-old-val="<%= job.title %>" class="job-input" type="text" value="<%= job.title %>">
                </td>
                <td>
                  <span class="job-text hide"><%= job.location %></span>
                  <input name="location" data-old-val="<%= job.location %>" class="job-input" type="text" value="<%= job.location %>">
                </td>
                <td class="job-link-cell" data-need-metadata="true">
                  <span class="job-text hide"><%= job.link %></span>
                  <input name="link" data-old-val="<%= job.link %>" class="job-input link" type="text" value="<%= job.link %>">
                  <!-- <a target="_blank" href="<%= job.link %>"><%= job.link %></a> -->
                </td>
                <td>
                  <span class="job-text"><%= job.remote %></span>
                  <select data-old-val="<%= job.remote %>" class="job-select remote hide" name="remote">
                    <option <%= job.remote === 'Remote' ? 'selected' : '' %> value="Remote">Remote</option>
                    <option <%= job.remote === 'Hybrid' ? 'selected' : '' %> value="Hybrid">Hybrid</option>
                    <option <%= job.remote === 'On-Site' ? 'selected' : '' %> value="On-Site">On-Site</option>
                  </select>
                </td>
                <td>
                  <span class="job-text hide"><%= job.salary %></span>
                  <span style="position: absolute;">$</span>
                  <input data-old-val="<%= job.salary %>" class="job-input salary" type="text" name="salary" value="<%= job.salary %>">
                </td>
                <td>
                  <span class="job-text hide"><%= job.notes %></span>
                  <div contenteditable="" class="job-input notes" data-old-val="<%= job.notes %>" name="notes"><%= job.notes %></div>
                </td>
                <td class="no-break-cell status-cell <%= job.status %>">
                  <span class="job-text"><%= job.status %></span>
                  <select data-old-val="<%= job.status %>" class="job-select hide status" name="status">
                    <option <%= job.status === 'Not Started Yet' ? 'selected' : '' %> value="Not Started Yet">Not Started Yet</option>
                    <option <%= job.status === 'In Progress' ? 'selected' : '' %> value="In Progress">In Progress</option>
                    <option <%= job.status === 'Submitted' ? 'selected' : '' %> value="Submitted">Submitted</option>
                  </select>
                </td>
                <td>
                  <div class="contact-item-container">
                    <label>Name:</label>
                    <span class="job-text hide"><%= job.contact.name %></span>
                    <input data-old-val="<%= job.contact.name %>" class="job-input contact name" type="text" name="name" value="<%= job.contact.name %>">
                  </div>
                  <div class="contact-item-container">
                    <label>Email:</label>
                    <span class="job-text hide"><%= job.contact.email %></span>
                    <input data-old-val="<%= job.contact.email %>" class="job-input contact email" type="text" name="email" value="<%= job.contact.email %>">
                  </div>
                  <div class="contact-item-container">
                    <label>Tel:</label>
                    <span class="job-text hide"><%= job.contact.tel %></span>
                    <input data-old-val="<%= job.contact.tel %>" class="job-input contact tel" type="text" name="tel" value="<%= job.contact.tel %>">
                  </div>
                </td>
                <td class="no-break-cell type-cell <%= job.type %>">
                  <span class="job-text"><%= job.type %></span>
                  <select data-old-val="<%= job.type %>" class="job-select type hide" name="type">
                    <option <%= job.type === 'Full Time' ? 'selected' : '' %> value="Full Time">Full Time</option>
                    <option <%= job.type === 'Contract' ? 'selected' : '' %> value="Contract">Contract</option>
                    <option <%= job.type === 'Temporary' ? 'selected' : '' %> value="Temporary">Temporary</option>
                    <option <%= job.type === 'Temp-To-Hire' ? 'selected' : '' %> value="Temp-To-Hire">Temp-To-Hire</option>
                  </select>
                </td>
                <td class="no-break-cell response-cell <%= job.response %>">
                  <span class="job-text"><%= job.response %></span>
                  <select data-old-val="<%= job.response %>" class="job-select response hide" name="response">
                    <option <%= job.response === 'No Response' ? 'selected' : '' %> value="No Response">No Response</option>
                    <option <%= job.response === 'Interviewing' ? 'selected' : '' %> value="Interviewing">Interviewing</option>
                    <option <%= job.response === 'Offer Made' ? 'selected' : '' %> value="Offer Made">Offer Made</option>
                    <option <%= job.response === 'Declined' ? 'selected' : '' %> value="Declined">Declined</option>
                  </select>
                </td>
                <td>
                  <span class="job-text hide"><%= job.coverLetter %></span>
                  <input data-old-val="<%= job.coverLetter %>" class="job-input coverLetter" type="text" name="coverLetter" value="<%= job.coverLetter %>">
                </td>
                <td class="interest" style="position: relative;">
                  <span class="job-text"><%= job.interest %></span>
                  <select data-old-val="<%= job.interest %>" class="job-select interest hide" name="interest">
                    <option <%= job.interest == 'Very interested' ? 'selected' : '' %> value="Very interested">Very interested</option>
                    <option <%= job.interest == 'Interested' ? 'selected' : '' %> value="Interested">Interested</option>
                    <option <%= job.interest == 'Somewhat interested' ? 'selected' : '' %> value="Somewhat interested">Somewhat interested</option>
                    <option <%= job.interest == 'Curious' ? 'selected' : '' %> value="Curious">Curious</option>
                    <option <%= job.interest == 'Mildly interested' ? 'selected' : '' %> value="Mildly interested">Mildly interested</option>
                  </select>
                  <div class="delete-btn">
                    <img src="/images/close-black.svg" alt="Delete button">
                  </div>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
      <div class="main-section settings">
        <div id="settings-main">
          <img class="close-btn" src="/images/close-black.svg" alt="Close button">
          <h1>Settings</h1>
          <div id="settings-container">
            <div class="preference-wrapper">
              <label>View notes in the main table?</label>
              <div data-preference="showNotes" data-col-idx="7" class="toggle <%= preferences.showNotes ? 'on' : '' %>">
                <div class="circle"></div>
              </div>
            </div>
            <div class="preference-wrapper">
              <label>View cover letter in the main table?</label>
              <div data-preference="showCoverLetter" data-col-idx="11" class="toggle <%= preferences.showCoverLetter ? 'on' : '' %>">
                <div class="circle"></div>
              </div>
            </div>
            <div class="preference-wrapper">
              <label>View job link in the main table?</label>
              <div data-preference="showJobLink" data-col-idx="4" class="toggle <%= preferences.showJobLink ? 'on' : '' %>">
                <div class="circle"></div>
              </div>
            </div>
            <div class="preference-wrapper">
              <label>View job location in the main table?</label>
              <div data-preference="showJobLocation" data-col-idx="3" class="toggle <%= preferences.showJobLocation ? 'on' : '' %>">
                <div class="circle"></div>
              </div>
            </div>
            <div class="preference-wrapper">
              <label>View Contacts in the main table?</label>
              <div data-preference="showContact" data-col-idx="9" class="toggle <%= preferences.showContact ? 'on' : '' %>">
                <div class="circle"></div>
              </div>
            </div>
            <div class="preference-wrapper">
              <label>Display colors?</label>
              <div data-preference="showColors" class="toggle <%= preferences.showColors ? 'on' : '' %>">
                <div class="circle"></div>
              </div>
            </div>
            <div class="settings-header theme" data-target="#themes-container">
              <h1>Color Themes</h1>
              <img src="/images/down-arrow.svg" alt="Chevron arrow">
            </div>
            <div id="themes-container">
              <div class="theme-container default <%= preferences.theme === 'default' ? 'active' : '' %>" data-theme="default">
                <h4>Default</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container metallic <%= preferences.theme === 'metallic' ? 'active' : '' %>" data-theme="metallic">
                <h4>Metallic</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container bright <%= preferences.theme === 'bright' ? 'active' : '' %>" data-theme="bright">
                <h4>Bright</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container earth <%= preferences.theme === 'earth' ? 'active' : '' %>" data-theme="earth">
                <h4>Earth</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container regal <%= preferences.theme === 'regal' ? 'active' : '' %>" data-theme="regal">
                <h4>Regal</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container forest <%= preferences.theme === 'forest' ? 'active' : '' %>" data-theme="forest">
                <h4>Forest</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container ocean <%= preferences.theme === 'ocean' ? 'active' : '' %>" data-theme="ocean">
                <h4>Ocean</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container fire <%= preferences.theme === 'fire' ? 'active' : '' %>" data-theme="fire">
                <h4>Fire</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container jewel <%= preferences.theme === 'jewel' ? 'active' : '' %>" data-theme="jewel">
                <h4>Jewel</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container pastel <%= preferences.theme === 'pastel' ? 'active' : '' %>" data-theme="pastel">
                <h4>Pastel</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container neutral <%= preferences.theme === 'neutral' ? 'active' : '' %>" data-theme="neutral">
                <h4>Neutral</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
              <div class="theme-container assisted <%= preferences.theme === 'assisted' ? 'active' : '' %>" data-theme="assisted">
                <h4>Assisted</h4>
                <div class="theme-colors">
                  <div class="Very_interested"></div>
                  <div class="Interested"></div>
                  <div class="Somewhat_interested"></div>
                  <div class="Curious"></div>
                  <div class="Mildly_interested"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>

<script>

  const state = {};


  /*-------------------- EVENT HANDLERS --------------------*/

  $('.settings-header').on('click', function() {
    const selector = $(this).data('target');
    $(this).toggleClass('closed');
    if ($(this).hasClass('closed')) {
      $(selector).slideUp(1000);
    } else {
      $(selector).slideDown(1000);
    }
  });

  $('.theme-container').on('click', function() {
    console.log('clicking');
    const thisEl = $(this);
    if (thisEl.hasClass('active')) return;
    const theme = thisEl.data('theme');
    const themeTitle = thisEl.children('h4').text();
    $.ajax({
      type: "PUT",
      url: '/users/<%= user._id %>/preferences/theme',
      data: {
        theme
      },
      success: res => {
        if (res.error) return handleSwalError(res.error);

        swal({
          icon: 'success',
          title: 'Theme Changed',
          text: 'Your default theme is now: '+themeTitle
        });
        
        console.log(res);

        const themeClasses = 'default metallic bright earth regal forest ocean fire jewel pastel neutral assisted';
        $('#all-jobs-table tbody tr').removeClass(themeClasses).addClass(theme);

        $('.theme-container').removeClass('active');
        thisEl.addClass('active');
      },
      error: function() {
        console.log(arguments);
      }
    })
  })

  $(document).ready(init);

  $(window).on('resize', () => {

    if ($(this).width() <= 768) {
      if (state.currCompanyWidth !== '100px') adjustCompanyWidths('100px');
    } else {
      if (state.currCompanyWidth !== '170px') adjustCompanyWidths('170px');
    }

  });
  
  $('#settings-btn').on('click', () => $('.main-section.settings').addClass('viewing') );

  $('#job-link-preview').hover(
    function() {
      clearTimeout(state.beginPreviewTimeout);
      clearTimeout(state.endPreviewTimeout);
    },
    function() {
      state.endPreviewTimeout = setTimeout(() => {
        $('#job-link-preview').removeClass('viewing');
      }, 1000);
    }
  )

  $('.main-section.settings .close-btn').on('click', () => $('.main-section.settings').removeClass('viewing'))
  
  $('.preference-wrapper .toggle').on('click', function() {
    const toggle = $(this);
    const preference = toggle.data('preference');

    $.ajax({
      type: "PUT",
      url: '/users/<%= user._id %>/preferences',
      data: {
        preference
      },
      success: res => {
        if (res.error) return handleSwalError(res.error);

        toggle.toggleClass('on', res[preference]);
        $('#all-jobs-table').toggleClass('hide-colors', !res.showColors);
        
        if (toggle.data('col-idx')) {
          state.jobsTable
            .column(toggle.data('col-idx'))
            .visible(res[preference])
            .columns
            .adjust()
            .draw();
        }
      },
      error: function() {
        console.log(arguments);
      }
    })
  });

  $('#job-link-preview .header .options img').on('click', async function() {

    const linkEl = $($('#job-link-preview').data('rowID')).find('.job-input.link');

    if ($(this).hasClass('edit')) linkEl.focus();
    else {
      const text = $($('#job-link-preview').data('rowID')).find('.job-input.link').val();
      const result = await navigator.clipboard.writeText(text);
      $('#job-link-preview, .job-link-cell').removeClass('viewing');
      swal({
        title: 'Succes!',
        icon: 'success',
        text: 'Link copied to clipboard.'
      })
    }
  });

  $('#job-link-preview .info').on('click', function() {
    const link = $(this).data('link');
    window.open(link, '_blank');
  });

  $('#hamburger-icon').on('click', () => $('#nav').toggleClass('open'))

  $('#add-job-btn').off('click').on('click', handleAddJob);

  $('.nav-option').on('click', () => $('#nav').removeClass('open'));


  /*-------------------- HELPER FUNCTIONS --------------------*/
  
  function init() {
    state.jobs = JSON.parse(`<%- JSON.stringify(jobs); %>`).reduce((acc, job) => acc[job._id] = formatDateFields(job), {});
    state.dtOptions = {};
    state.currCompanyWidth = null;
  
    try {
      state.dtOptions.buttons = JSON.parse(`<%- (Number(onMobile) ? '[]' : '["copy","csv","excel","pdf","print"]') %>`);
      state.dtOptions.dom = 'BfrtiplF';
    } catch (error) {
      console.log(error);
      state.dtOptions.dom = 'frtiplF';
    }
  
    state.jobsTable = $('#all-jobs-table').removeAttr('width').DataTable({
      ...state.dtOptions,
      columnDefs: [
        { "visible": JSON.parse('<%= JSON.stringify(preferences.showJobLocation) %>'), "targets": 3 },
        { "visible": JSON.parse('<%= JSON.stringify(preferences.showJobLink) %>'), "targets": 4 },
        { "visible": JSON.parse('<%= JSON.stringify(preferences.showNotes) %>'), "targets": 7 },
        { "visible": JSON.parse('<%= JSON.stringify(preferences.showContact) %>'), "targets": 9 },
        { "visible": JSON.parse('<%= JSON.stringify(preferences.showCoverLetter) %>'), "targets": 12 },
        { "width": "160px", "targets": 8 },
        { "width": "160px", "targets": 11 },
        { "width": "160px", "targets": 13 },
      ],
      order: [[1, 'asc']],
      scrollY:        '80vh',
      scrollX:        true,
      scrollCollapse: true,
      paging:         false,
      fixedColumns:   true
    });

    for (let id in state.jobs) {
      const appliedInput = $(`tr[data-job-id="${id}"] .job-date.dateApplied`);
      appliedInput.val(state.jobs[id].dateAppliedVal);
    }

    initEvents();

    const tableWrapper = $('.dataTables_scrollBody')[0];

    const tableWrapperObserver = new ResizeObserver((entries) => {
      const table = $('#all-jobs-table');
      const tableWrapperWidth = entries[0].contentRect.width;
      const tableWidth = table.prop('clientWidth');
      const showBoxShadow = tableWrapperWidth < tableWidth;
      table.find('tbody tr>.dtfc-fixed-left').toggleClass('cast-shadow', showBoxShadow);
    });

    tableWrapperObserver.observe(tableWrapper);

    $('.dataTables_scrollBody').on('scroll', function() {
      if (!$('#job-link-preview').hasClass('viewing')) return;
      
      $('#job-link-preview').removeClass('viewing');
      clearTimeout(state.beginPreviewTimeout);
      clearTimeout(state.endPreviewTimeout);
    });
  }

  function formatDateFields(job) {
    job.dateApplied = new Date(job.dateApplied);
    
    const UTCAppliedTS = job.dateApplied.getTime() + (job.dateApplied.getTimezoneOffset() * 60*1000);
    job.dateApplied = new Date(UTCAppliedTS);

    let appliedMonth = job.dateApplied.getMonth()+1;
    if (appliedMonth < 10) appliedMonth = '0'+appliedMonth;
    let appliedDay = job.dateApplied.getDate();
    if (appliedDay < 10) appliedDay = '0'+appliedDay;

    job.dateAppliedVal = `${job.dateApplied.getFullYear()}-${appliedMonth}-${appliedDay}`;
    return job;
  }

  function setCellBackgroundColor(selectEl, className, newVal) {
    $(selectEl).parents(`.${className}-cell`)
    .removeClass($(selectEl).data('old-val'))
    .addClass(newVal);
  }

  function initEvents() {

    $('#all-jobs-table tbody tr .delete-btn').off('click').on('click', function() {
      const jobID = $(this).parents('tr').data('job-id');
      const company = $(this).parents('tr').find('td.company .job-input').val();
  
      swal({
        icon: 'warning',
        title: 'Delete Job Application',
        text: `Are you sure you would like to delete your application for ${company}`,
        buttons: ["GO BACK", "Yes, Delete"],
        className: 'swal-delete-job'
      }).then(deleteJob => {
        if (deleteJob) {
          $.ajax({
            type: "POST",
            url: `/jobs/${jobID}?_method=DELETE`,
            data: {},
            success: res => {
              if (res.loggedOut) return window.location = '/';
              if (res.status == 200) {
                $('#all-jobs-table')
                  .dataTable()
                  .api()
                  .rows($(`#job-${jobID}`))
                  .remove()
                  .draw(false);
              }
            },
            error: () => console.log(arguments)
          });
        }
      });
    });
  
    $('.job-text').off('click').on('click', function() {
      const jobDateInput = $(this).siblings('.job-date');
      const jobSelect = $(this).siblings('.job-select');
  
      $([jobSelect, jobDateInput, this]).toggleClass('hide');
  
      if (jobSelect) jobSelect.focus();
      if (jobDateInput) jobDateInput.focus();

    });
  
    $('.job-date, .job-select').off('change').on('change', function() {
      const renderTextEl = $(this).siblings('.job-text')
      if ($(this).hasClass('job-date')) {
        const dateValsArr = $(this).val().split('-');
        const newDateStr = new Date(dateValsArr[0], dateValsArr[1]-1, dateValsArr[2]).toDateString();
        renderTextEl.text(newDateStr);
      } else {
        renderTextEl.text($(this).val());
        if ($(this).hasClass('interest')) {
          const classNames = [
            'interest-Very_interested',
            'interest-Interested',
            'interest-Somewhat_interested',
            'interest-Curious',
            'interest-Mildly_interested',
          ];
          $(this).parents('tr')
          .removeClass(classNames.join(' '))
          .addClass(`interest-${$(this).val().replaceAll(' ', '_')}`);
        }
      }
    });
  
    $('.job-date, .job-select, .job-input').off('blur').on('blur', function() {

      const thisEl = $(this);
      const newVal = thisEl.hasClass('notes') ? thisEl.text() : thisEl.val();
  
      if (thisEl.hasClass('job-input')) {
        thisEl.siblings('.job-text').text(newVal);
      } else {
        thisEl.siblings('.job-text').trigger('click');
      }

      if (newVal == thisEl.data('old-val')) return;
  
      const jobID = thisEl.parents('tr').data('job-id');
      const jobField = thisEl.attr('name');
      let url = "/jobs/"+jobID;
      if (thisEl.hasClass('contact')) {
        url = "/contacts/"+state.jobs[jobID].contact._id;
      }
  
      if (thisEl.hasClass('status')) setCellBackgroundColor(this, 'status', newVal);
      if (thisEl.hasClass('response')) setCellBackgroundColor(this, 'response', newVal);
      
      thisEl.data('old-val', newVal);
  
      $.ajax({
        type:"PUT",
        url,
        data: {
          [jobField]: newVal
        },
        success: async res => {
          if (res.loggedOut) return window.location = '/';
          if (thisEl.hasClass('link')) handleViewingLinkPreview(jobID);
        },
        error: function() {
          console.log(arguments);
        }
      });
      
    });
  
    $('.job-input').off('focus').on('focus', function() { this.select() });
    
    $('.job-input.salary').off('keydown').on('keydown', function(evt) {
      const keyCode = evt.originalEvent.keyCode;
      const validCodes = [8,37,38,39,40,48,49,50,51,52,53,54,55,56,57];
      const notValid = !validCodes.includes(keyCode);
      if (notValid) evt.preventDefault();
    });

    $('.job-link-cell').off('mouseover').off('mouseout').hover(
      function() {
        const jobLinkCell = this;
        clearTimeout(state.beginPreviewTimeout);
        clearTimeout(state.endPreviewTimeout);
        state.beginPreviewTimeout = setTimeout(async () => {
          const thisJobID = $(jobLinkCell).parents('tr').data('job-id');
          handleViewingLinkPreview(thisJobID);
        }, 1000);
      },
      function() {
        clearTimeout(state.beginPreviewTimeout);
        clearTimeout(state.endPreviewTimeout);
        state.endPreviewTimeout = setTimeout(() => {
          $('#job-link-preview').removeClass('viewing');
        }, 1000);
      }
    );

  }

  function handleViewingLinkPreview(jobID) {

    getJobLinkMetaData(jobID);
    const rowID = `#job-${jobID}`;
    
    $('#job-link-preview').addClass('viewing loading').data('rowID', rowID);
    const loaderClass =$(rowID).prop('className').replaceAll('odd', '').replaceAll('even', '');
    // const interest = $(rowID).find('.interest .job-text').text();
    $('#loader').removeClass().addClass(loaderClass);
    
    const jobLinkTextEl = $(`#job-${jobID}`).find('.job-link-cell .job-input')[0];
    const cellPos = jobLinkTextEl.getBoundingClientRect();
    const previewHeight = Number($('#job-link-preview').css('height').slice(0, -2));
    const previewWidth = Number($('#job-link-preview').css('width').slice(0, -2));
    let left = (cellPos.x + cellPos.width/2) - (previewWidth/2);
    let top = cellPos.bottom + 8;

    const previewIsBeyondRight = (left + previewWidth) > $(window).width() - 48;
    const previewIsBeyondBottom = (top + previewHeight) > $(window).height() - 48;
    const previewIsBeyondLeft = left < 48;

    if (previewIsBeyondRight) left = $(window).width() - previewWidth - 48;
    if (previewIsBeyondBottom) top = cellPos.top - previewHeight - 8;
    if (previewIsBeyondLeft) left = 48;

    $('#job-link-preview').css({
      top,
      left,
    });
    
    $('#job-link-preview img.favicon')
      .off('load')
      .on('load', evt => $('#job-link-preview').removeClass('loading'))
      .off('error')
      .on('error', function() {
        $(this).attr('src', '/images/global.svg');
        // $('#job-link-preview').removeClass('loading');
      });

      $('#job-link-preview')[0].getBoundingClientRect();
      
  }

  function handleSwalError(error) {
    swal({
      icon: 'error',
      title: 'Error',
      text: error
    });
  }

  function getJobLinkMetaData(jobID) {
    const link = $(`#job-${jobID}`).find('.job-input.link').val();
    $.ajax({
      type: "PUT",
      url: `/jobs/getLinkMetaData/`,
      data: {
        link,
        jobID
      },
      success: res => {

        $('#job-link-preview').toggleClass('bad-fetch', !!res.error);
        $('#job-link-preview .info').data('link', link);
        $('#job-link-preview .info img.favicon').attr('src', res.icon);
        $('#job-link-preview .info .title h1').text(!!res.error ? '' : res.title);
        $('#job-link-preview .info .title span').text(res.hostName);

        if (res.loggedOut) window.location = '/';
      },
      error: () => console.log(arguments)
    });

  }

  function scrollToNewRow(selector) {
    const row = $(selector)[0];
    console.log(row);

    $('.dataTables_scrollBody')[0].scrollBy({
      top: (($(window).height()/2) + (row.getBoundingClientRect().y * -1)) * -1,
      left: 0,
      behavior: 'smooth'
    });
  }

  function adjustCompanyWidths(val) {
    $('#all-jobs-table tbody tr td:first-child').css('width', val);
    $('#all-jobs-table tbody tr td:first-child input').css('width', val);
    state.currCompanyWidth = val;
    state.jobsTable.columns.adjust();
  }

  function handleAddJob() {
  
    $.ajax({
      type: "POST",
      url: "/jobs/",
      data: {},
      success: data => {

        if (data.error) handleSwalError(data.error);
        
        const job = formatDateFields(data.job);
        const preferences = data.preferences;

        const companyClassName = $('.cast-shadow').length ? 'cast-shadow' : '';

        const newRow = $(`<tr id="job-${job._id}" class="interest-${job.interest.replaceAll(' ', '_')} ${preferences.theme}" data-job-id="${job._id}"><td class="company dtfc-fixed-left sorting_1 ${companyClassName}"><span class="job-text hide">${job.companyName}</span><input name="companyName" data-old-val="${job.companyName}" class="job-input" type="text" value="${job.companyName}"></td><td class="date-applied-cell"><span class="job-text">${job.dateApplied.toDateString()}</span><input class="job-date dateApplied hide" type="date" name="dateApplied" value></td><td><span class="job-text hide">${job.title}</span><input name="title" data-old-val="${job.title}" class="job-input" type="text" value="${job.title}"></td><td><span class="job-text hide">${job.location}</span><input name="location" data-old-val="${job.location}" class="job-input" type="text" value="${job.location}"></td><td class="job-link-cell" data-need-metadata="true"><span class="job-text hide">${job.link}</span><input name="link" data-old-val="${job.link}" class="job-input link" type="text" value="${job.link}"></td><td><span class="job-text">${job.remote}</span><select data-old-val="${job.remote}" class="job-select remote hide" name="remote"><option selected value="Remote">Remote</option><option value="Hybrid">Hybrid</option><option value="On-Site">On-Site</option></select></td><td><span class="job-text hide">${job.salary}</span><span style="position: absolute;">$</span><input data-old-val="${job.salary}" class="job-input salary" type="text" name="salary" value="${job.salary}"></td><td><span class="job-text hide">${job.notes}</span><div contenteditable="" class="job-input notes" data-old-val="${job.notes}" name="notes">${job.notes}</div></td><td class="status-cell ${job.status}"><span class="job-text">${job.status}</span><select data-old-val="${job.status}" class="job-select status hide" name="status"><option selected value="Not Started Yet">Not Started Yet</option><option value="In Progress">In Progress</option><option value="Submitted">Submitted</option></select></td><td><div class="contact-item-container"><label>Name:</label><span class="job-text hide">${job.contact.name}</span><input data-old-val="${job.contact.name}" class="job-input contact name" type="text" name="name" value="${job.contact.name}"></div><div class="contact-item-container"><label>Email:</label><span class="job-text hide">${job.contact.email}</span><input data-old-val="${job.contact.email}" class="job-input contact email" type="text" name="email" value="${job.contact.email}"></div><div class="contact-item-container"><label>Tel:</label><span class="job-text hide">${job.contact.tel}</span><input data-old-val="${job.contact.tel}" class="job-input contact tel" type="text" name="tel" value="${job.contact.tel}"></div></td><td class="no-break-cell type-cell ${job.type}"><span class="job-text">${job.type}</span><select data-old-val="${job.type}" class="job-select type hide" name="type"><option selected value="Full Time">Full Time</option><option value="Contract">Contract</option><option value="Temporary">Temporary</option><option value="Temp-To-Hire">Temp-To-Hire</option></select></td><td class="response-cell ${job.response}"><span class="job-text">${job.response}</span><select data-old-val="${job.response}" class="job-select response hide" name="response"><option selected value="No Response">No Response</option><option value="Interviewing">Interviewing</option><option value="Offer Made">Offer Made</option><option value="Declined">Declined</option></select></td><td><span class="job-text hide">${job.coverLetter}</span><input data-old-val="${job.coverLetter}" class="job-input coverLetter" type="text" name="coverLetter" value="${job.coverLetter}"></td><td style="position: relative;"><span class="job-text">${job.interest}</span><select data-old-val="${job.interest}" class="job-select interest hide" name="interest"><option value="Very interested">Very interested</option><option value="Interested">Interested</option><option selected value="Somewhat interested">Somewhat interested</option><option value="Curious">Curious</option><option value="Mildly interested">Mildly interested</option></select><div class="delete-btn"><img src="/images/close-black.svg" alt="Close button"></div></td></tr>`);

        state.jobsTable.row.add(newRow[0]).draw(false);

        initEvents();

        scrollToNewRow(`#job-${job._id}`);
        
      },
      error: function() {
        console.log(arguments);
      }
    })
    
  }

</script>

</html>